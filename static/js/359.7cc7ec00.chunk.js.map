{"version":3,"file":"static/js/359.7cc7ec00.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","utils/fetchFilms.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin: ${p => p.theme.mp(0, 0, 2)};\n  padding: ${p => p.theme.mp(2, 3)};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  color: #222244;\n  background-color: transparent;\n\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n`;\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin: 0 0 20px;\n  font-size: 36px;\n  font-weight: bold;\n`;\n\nexport const MovieYear = styled.span`\n  font-size: 32px;\n  font-weight: normal;\n`;\n\nexport const MovieMeta = styled.div`\n  display: flex;\n  padding: 10px 0 20px;\n  border-bottom: 1px solid #000000;\n`;\n\nexport const MovieDescription = styled.p`\n  margin: 0 0 0 10px;\n  font-size: 16px;\n  font-weight: normal;\n`;\n\nexport const DescriptionLink = styled(Link)`\n  margin: 10px 0 0;\n  font-size: 16px;\n  font-weight: bold;\n  text-decoration: underline;\n  color: #222244;\n`;\n\nexport const MovieLinks = styled.div`\n  display: flex;\n  padding: 0 0 20px;\n  flex-direction: column;\n  border-bottom: 1px solid #000000;\n`;\n","import { fetchFilmData } from 'utils/fetchFilms';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport posterPlaceholder from '../../img/film-poster-placeholder.png';\nimport {\n  Button,\n  DescriptionLink,\n  MovieDescription,\n  MovieInfoContainer,\n  MovieLinks,\n  MovieMeta,\n  MovieTitle,\n  MovieYear,\n} from './MovieInfo.styled';\n\nconst MovieInfo = () => {\n  const params = useParams();\n  const movieId = parseInt(params.movieId);\n  const [filmData, setFilmData] = useState({});\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    fetchFilmData(movieId).then(setFilmData);\n  }, [movieId]);\n\n  const { title, tagline, poster_path, overview, release_date } = filmData;\n\n  document.title = `React HW05 - Movie info - ${title}`;\n\n  return (\n    <MovieInfoContainer>\n      <Link to={backLinkHref}>\n        <Button>\n          <IoMdArrowRoundBack />\n          Go back\n        </Button>\n      </Link>\n      {title && overview ? (\n        <>\n          <MovieTitle>\n            {title} <MovieYear>({String(release_date).slice(0, 4)})</MovieYear>\n          </MovieTitle>\n          <MovieMeta>\n            <img\n              width=\"300\"\n              height=\"450\"\n              alt={tagline}\n              src={\n                poster_path ? `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${poster_path}` : posterPlaceholder\n              }\n            />\n            <MovieDescription>{overview}</MovieDescription>\n          </MovieMeta>\n          <MovieLinks>\n            <DescriptionLink to=\"cast\" state={{ from: `${backLinkHref}` }}>\n              Cast\n            </DescriptionLink>\n            <DescriptionLink to=\"reviews\" state={{ from: `${backLinkHref}` }}>\n              Reviews\n            </DescriptionLink>\n          </MovieLinks>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </MovieInfoContainer>\n  );\n};\n\nexport default MovieInfo;\n","import axios from 'axios';\n\nconst API_KEY = 'ad24807293275bef83ede161311e71e0';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst PATH_TRENDING = 'movie/popular'; // - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nconst PATH_SEARCH = 'search/movie'; // - пошук фільму за ключовим словом на сторінці фільмів.\nconst PATH_DETAILS = 'movie'; // - запит повної інформації про фільм для сторінки кінофільму.\nconst PATH_CREDITS = 'credits'; // - запит інформації про акторський склад для сторінки кінофільму.\nconst PATH_REVIEWS = 'reviews'; // - запит оглядів для сторінки кінофільму.\n\nconst fetchPath = path => axios.get(path).then(r => r.data);\n\nexport const fetchTrendingFilms = () => fetchPath(`${BASE_URL}${PATH_TRENDING}?api_key=${API_KEY}`);\nexport const fetchFilmList = ({ query = 'trending', page = 1 }) => fetchPath(`${BASE_URL}${PATH_SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`);\nexport const fetchFilmData = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}?api_key=${API_KEY}`);\nexport const fetchFilmCredits = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?api_key=${API_KEY}`).then(r => r.cast.slice(0, 10));\nexport const fetchFilmReviews = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?api_key=${API_KEY}`).then(r => r.results.slice(0, 10));\n"],"names":["Button","styled","p","theme","mp","MovieInfoContainer","MovieTitle","MovieYear","MovieMeta","MovieDescription","DescriptionLink","Link","MovieLinks","params","useParams","movieId","parseInt","useState","filmData","setFilmData","backLinkHref","useLocation","state","from","useEffect","fetchFilmData","then","title","tagline","poster_path","overview","release_date","document","to","String","slice","width","height","alt","src","posterPlaceholder","Suspense","fallback","API_KEY","BASE_URL","PATH_DETAILS","fetchPath","path","axios","r","data","fetchTrendingFilms","fetchFilmList","query","page","fetchFilmCredits","cast","fetchFilmReviews","results"],"sourceRoot":""}