{"version":3,"file":"static/js/387.a4e6418a.chunk.js","mappings":"qPAEaA,EAAaC,EAAAA,GAAAA,GAAH,0EAMVC,EAAaD,EAAAA,GAAAA,GAAH,yJACV,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAf,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAG,EAAG,EAArB,IAQAC,EAASL,EAAAA,GAAAA,KAAH,8CAINM,EAAUN,EAAAA,GAAAA,KAAH,6F,SCSpB,EA1BgB,WACd,IAAMO,GAASC,EAAAA,EAAAA,MACTC,EAAUC,SAASH,EAAOE,SAChC,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,KAAKH,EAChC,GAAE,CAACJ,KAGF,SAACV,EAAD,UACGa,GAAWA,EAAQK,OAAS,EAC3BL,EAAQM,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAACpB,EAAD,YACE,SAACI,EAAD,UAASe,IADX,MAC6B,SAACd,EAAD,UAAUe,MADtBF,EAIpB,KAED,SAAClB,EAAD,iCAIP,C,mKC3BKqB,EAAU,mCACVC,EAAW,gCAGXC,EAAe,QAIfC,EAAY,SAAAC,GAAI,OAAIC,EAAAA,GAAAA,IAAUD,GAAMV,MAAK,SAAAY,GAAC,OAAIA,EAAEC,IAAN,GAA1B,EAETC,EAAqB,kBAAML,EAAU,GAAD,OAAIF,GAAJ,OAR3B,gBAQ2B,oBAAwCD,GAAvD,EACrBS,EAAgB,SAAC,GAAD,QAAGC,MAAAA,OAAH,MAAW,WAAX,MAAuBC,KAAAA,OAAvB,MAA8B,EAA9B,SAAsCR,EAAU,GAAD,OAAIF,GAAJ,OARxD,eAQwD,oBAAsCD,EAAtC,kBAAuDU,EAAvD,iBAAqEC,GAApH,EAChBC,EAAgB,SAAAzB,GAAO,OAAIgB,EAAU,GAAD,OAAIF,GAAJ,OAAeC,EAAf,YAA+Bf,EAA/B,oBAAkDa,GAA/D,EACvBa,EAAmB,SAAA1B,GAAO,OAAIgB,EAAU,GAAD,OAAIF,GAAJ,OAAeC,EAAf,YAA+Bf,EAA/B,YAR/B,UAQ+B,oBAAkEa,IAAWN,MAAK,SAAAY,GAAC,OAAIA,EAAEQ,KAAKC,MAAM,EAAG,GAApB,GAAhG,EAC1BtB,EAAmB,SAAAN,GAAO,OAAIgB,EAAU,GAAD,OAAIF,GAAJ,OAAeC,EAAf,YAA+Bf,EAA/B,YAR/B,UAQ+B,oBAAkEa,IAAWN,MAAK,SAAAY,GAAC,OAAIA,EAAEU,QAAQD,MAAM,EAAG,GAAvB,GAAhG,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","utils/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: ${p => p.theme.mp(1)};\n  margin: ${p => p.theme.mp(3, 0, 0)};\n\n  font-size: 14px;\n  font-weight: normal;\n\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Author = styled.span`\n  font-weight: bold;\n`;\n\nexport const Comment = styled.span`\n  margin: 0 0 0 10px;\n\n  font-size: 14px;\n  font-weight: normal;\n`;\n","import { fetchFilmReviews } from 'utils/fetchFilms';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList, Author, Comment, ReviewItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const params = useParams();\n  const movieId = parseInt(params.movieId);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchFilmReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ReviewList>\n      {reviews && reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <ReviewItem key={id}>\n              <Author>{author}</Author>: <Comment>{content}</Comment>\n            </ReviewItem>\n          );\n        })\n      ) : (\n        <ReviewItem>No reviews yet...</ReviewItem>\n      )}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = 'ad24807293275bef83ede161311e71e0';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst PATH_TRENDING = 'movie/popular'; // - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nconst PATH_SEARCH = 'search/movie'; // - пошук фільму за ключовим словом на сторінці фільмів.\nconst PATH_DETAILS = 'movie'; // - запит повної інформації про фільм для сторінки кінофільму.\nconst PATH_CREDITS = 'credits'; // - запит інформації про акторський склад для сторінки кінофільму.\nconst PATH_REVIEWS = 'reviews'; // - запит оглядів для сторінки кінофільму.\n\nconst fetchPath = path => axios.get(path).then(r => r.data);\n\nexport const fetchTrendingFilms = () => fetchPath(`${BASE_URL}${PATH_TRENDING}?api_key=${API_KEY}`);\nexport const fetchFilmList = ({ query = 'trending', page = 1 }) => fetchPath(`${BASE_URL}${PATH_SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`);\nexport const fetchFilmData = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}?api_key=${API_KEY}`);\nexport const fetchFilmCredits = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?api_key=${API_KEY}`).then(r => r.cast.slice(0, 10));\nexport const fetchFilmReviews = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?api_key=${API_KEY}`).then(r => r.results.slice(0, 10));\n"],"names":["ReviewList","styled","ReviewItem","p","theme","mp","Author","Comment","params","useParams","movieId","parseInt","useState","reviews","setReviews","useEffect","fetchFilmReviews","then","length","map","id","author","content","API_KEY","BASE_URL","PATH_DETAILS","fetchPath","path","axios","r","data","fetchTrendingFilms","fetchFilmList","query","page","fetchFilmData","fetchFilmCredits","cast","slice","results"],"sourceRoot":""}