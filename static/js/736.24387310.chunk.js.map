{"version":3,"file":"static/js/736.24387310.chunk.js","mappings":"yPAEaA,EAAWC,EAAAA,GAAAA,GAAH,0EAMRC,EAAWD,EAAAA,GAAAA,GAAH,yJACR,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAf,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAG,EAAG,EAArB,IAQAC,EAAWL,EAAAA,GAAAA,IAAH,2JASRM,EAAYN,EAAAA,GAAAA,EAAH,kFACV,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAG,EAAG,EAArB,IAKAG,EAAOP,EAAAA,GAAAA,KAAH,gDAIJQ,EAAgBR,EAAAA,GAAAA,EAAH,8DACd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAG,EAAG,EAArB,I,SCUb,EA3Ca,WACX,IAAMK,GAASC,EAAAA,EAAAA,MACTC,EAAUC,SAASH,EAAOE,SAChC,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,KAAKH,EAChC,GAAE,CAACJ,KAGF,SAACZ,EAAD,UACGe,GAAWA,EAAQK,OAAS,EAC3BL,EAAQM,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAClC,OACE,UAACvB,EAAD,YACE,gBACEwB,IACED,EAAY,4DAC6CA,GAD7C,4JAIdE,MAAM,MACNC,OAAO,MACPC,IAAKN,KAEP,UAACjB,EAAD,YACE,SAACC,EAAD,UAAYgB,IACXC,EAAUJ,OAAS,IAClB,UAACX,EAAD,YACE,SAACD,EAAD,kBADF,IACoBgB,UAfXF,EAqBlB,KAED,SAACpB,EAAD,2CAIP,C,mKC5CK4B,EAAU,mCACVC,EAAW,gCAGXC,EAAe,QAIfC,EAAY,SAAAC,GAAI,OAAIC,EAAAA,GAAAA,IAAUD,GAAMf,MAAK,SAAAiB,GAAC,OAAIA,EAAEC,IAAN,GAA1B,EAETC,EAAqB,kBAAML,EAAU,GAAD,OAAIF,GAAJ,OAR3B,gBAQ2B,oBAAwCD,GAAvD,EACrBS,EAAgB,SAAC,GAAD,QAAGC,MAAAA,OAAH,MAAW,WAAX,MAAuBC,KAAAA,OAAvB,MAA8B,EAA9B,SAAsCR,EAAU,GAAD,OAAIF,GAAJ,OARxD,eAQwD,oBAAsCD,EAAtC,kBAAuDU,EAAvD,iBAAqEC,GAApH,EAChBC,EAAgB,SAAA9B,GAAO,OAAIqB,EAAU,GAAD,OAAIF,GAAJ,OAAeC,EAAf,YAA+BpB,EAA/B,oBAAkDkB,GAA/D,EACvBZ,EAAmB,SAAAN,GAAO,OAAIqB,EAAU,GAAD,OAAIF,GAAJ,OAAeC,EAAf,YAA+BpB,EAA/B,YAR/B,UAQ+B,oBAAkEkB,IAAWX,MAAK,SAAAiB,GAAC,OAAIA,EAAEO,KAAKC,MAAM,EAAG,GAApB,GAAhG,EAC1BC,EAAmB,SAAAjC,GAAO,OAAIqB,EAAU,GAAD,OAAIF,GAAJ,OAAeC,EAAf,YAA+BpB,EAA/B,YAR/B,UAQ+B,oBAAkEkB,IAAWX,MAAK,SAAAiB,GAAC,OAAIA,EAAEU,QAAQF,MAAM,EAAG,GAAvB,GAAhG,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","utils/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  padding: ${p => p.theme.mp(2)};\n  margin: ${p => p.theme.mp(3, 0, 0)};\n\n  font-size: 14px;\n  font-weight: normal;\n\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n`;\n\nexport const CastMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: normal;\n  margin: 0;\n`;\n\nexport const ActorName = styled.p`\n  margin: ${p => p.theme.mp(2, 0, 0)};\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const Span = styled.span`\n  font-weight: normal;\n`;\n\nexport const CharacterName = styled.p`\n  margin: ${p => p.theme.mp(2, 0, 0)};\n  font-weight: bold;\n`;\n","import { fetchFilmCredits } from 'utils/fetchFilms';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorName, CastItem, CastList, CastMeta, CharacterName, Span } from './Cast.styled';\n\nconst Cast = () => {\n  const params = useParams();\n  const movieId = parseInt(params.movieId);\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    fetchFilmCredits(movieId).then(setCredits);\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {credits && credits.length > 0 ? (\n        credits.map(({ id, name, character, profile_path }) => {\n          return (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://www.themoviedb.org/t/p/w138_and_h175_face/${profile_path}`\n                    : `https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg`\n                }\n                width=\"138\"\n                height=\"175\"\n                alt={name}\n              />\n              <CastMeta>\n                <ActorName>{name}</ActorName>\n                {character.length > 0 && (\n                  <CharacterName>\n                    <Span>as </Span> {character}\n                  </CharacterName>\n                )}\n              </CastMeta>\n            </CastItem>\n          );\n        })\n      ) : (\n        <CastItem>No information is available</CastItem>\n      )}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'ad24807293275bef83ede161311e71e0';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst PATH_TRENDING = 'movie/popular'; // - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nconst PATH_SEARCH = 'search/movie'; // - пошук фільму за ключовим словом на сторінці фільмів.\nconst PATH_DETAILS = 'movie'; // - запит повної інформації про фільм для сторінки кінофільму.\nconst PATH_CREDITS = 'credits'; // - запит інформації про акторський склад для сторінки кінофільму.\nconst PATH_REVIEWS = 'reviews'; // - запит оглядів для сторінки кінофільму.\n\nconst fetchPath = path => axios.get(path).then(r => r.data);\n\nexport const fetchTrendingFilms = () => fetchPath(`${BASE_URL}${PATH_TRENDING}?api_key=${API_KEY}`);\nexport const fetchFilmList = ({ query = 'trending', page = 1 }) => fetchPath(`${BASE_URL}${PATH_SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`);\nexport const fetchFilmData = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}?api_key=${API_KEY}`);\nexport const fetchFilmCredits = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?api_key=${API_KEY}`).then(r => r.cast.slice(0, 10));\nexport const fetchFilmReviews = movieId => fetchPath(`${BASE_URL}${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?api_key=${API_KEY}`).then(r => r.results.slice(0, 10));\n"],"names":["CastList","styled","CastItem","p","theme","mp","CastMeta","ActorName","Span","CharacterName","params","useParams","movieId","parseInt","useState","credits","setCredits","useEffect","fetchFilmCredits","then","length","map","id","name","character","profile_path","src","width","height","alt","API_KEY","BASE_URL","PATH_DETAILS","fetchPath","path","axios","r","data","fetchTrendingFilms","fetchFilmList","query","page","fetchFilmData","cast","slice","fetchFilmReviews","results"],"sourceRoot":""}